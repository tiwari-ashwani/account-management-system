openapi: 3.0.3
info:
  title: Account Management System - OpenAPI 3.0
  description: |-
    Account Management API Specs for Account Creation and Money Transfer
  version: 1.0.0

servers:
  - url: http://localhost:8080/api/v1
  
paths:
  /accounts:
    post:
      summary: Create a new account
      description: Operation to Create New Account
      operationId: createAccount
      requestBody:
        description: Create a new account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
        required: true
      responses:
        '200':
          description: Account(s) Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountResponse'   
        '400':
          description: Invalid request
          content:
            application/json:
             schema:
              $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Get all accounts
      description: Operation to Fetch All Accounts
      operationId: getAccountDetails
      responses:
        '200':
          description: Account(s) Fetched Successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountDetails'          
        '400':
          description: Invalid request
          content:
            application/json:
             schema:
              $ref: '#/components/schemas/ErrorResponse'
              
              
  /accounts/{accountId}:
    get:
      summary: Information for a specific Account
      description: Operation to Fetch an Account by AccountId
      operationId: getAccountById
      parameters:
        - name: accountId
          in: path
          required: true
          description: The id of the account to be retrieved
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Account Information Fetched Successfully
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/AccountDetails'          
        '400':
          description: Invalid request
          content:
            application/json:
             schema:
              $ref: '#/components/schemas/ErrorResponse'
        default:
          description: Unexpected Error During Request
          content:
            application/json:
             schema:
              $ref: '#/components/schemas/ErrorResponse'

  /transactions:
     post:
        summary: Money transfer between two accounts
        description: Operation To Transfer Money Between Two Accounts
        operationId: executePaymentTransfer
        requestBody: 
         description: Request Body for Transfer Operation
         content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransferRequest'
         required: true
        responses:
         '200':
           description: Payment Executed Successfully
           content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTransferResponse' 
         '400':
           description: Invalid request
           content:
            application/json:
             schema:
              $ref: '#/components/schemas/ErrorResponse'
             example:
                error: This field is required    
          
components:

  schemas:
    CreateAccountRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        emailId:
          type: string
        contactNumber:
          type: string
          pattern: '^\+[0-9]{1,3}-[0-9()+\\-]{1,20}$'
        initialAmount:
          type: number
        accountType:
          type: string
          enum:
           - Savings
           - Current
           - Personal
           - Credit
           - Home
      required:
       - firstName
       - lastName
       - emailId
       - initialAmount
       - accountType
       - contactNumber
            
    AccountDetails:
      type: object
      properties:
        id:
          type: string
          format: uuid
        iban:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        emailId:
          type: string
        contactNumber:
          type: string
        currentBalance: 
          type: number
        accountType:
          type: string
        accountStatus:
          type: string
          
    CreateAccountResponse:
      type: object
      properties:
        id:
         type: string
         format: uuid
        iban:
         type: string
        firstName:
         type: string
        lastName:
         type: string
        emailId:
         type: string
        contactNumber:
         type: string
        currentBalance: 
         type: number
        accountType:
         type: string
         enum:
           - Savings
           - Current
           - Personal
           - Credit
           - Home
        accountStatus:
         type: string
         enum:
           - Pending
           - Active
           - Terminated
           - Inactive
           - Blocked
        
    PaymentTransferRequest:
      type: object
      properties:
        payerIban:
         type: string
         pattern: '^[A-Z]{2}[0-9]{2}[A-Z0-9]{4}[0-9]{10}$'
        payeeIban:
         type: string
         pattern: '^[A-Z]{2}[0-9]{2}[A-Z0-9]{4}[0-9]{10}$'
        payerContactNumber:
         type: string
         pattern: '^\+[0-9]{1,3}-[0-9()+\\-]{1,20}$'
        payeeContactNumber:
         type: string
         pattern: '^\+[0-9]{1,3}-[0-9()+\\-]{1,20}$'
        transferAmount: 
         type: number
         minimum: 0
      required:
       - payerIban
       - payeeIban
       - transferAmount
         
         
    PaymentTransferResponse:
      type: object
      properties:
        transactionId:
          type: string
          format: uuid
          description: The unique ID of the transaction
        transactionStatus:
          type: string
          description: The status of the payment (e.g., "success") 
        amount:
          type: number
          description: The amount transferred  
                 
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string